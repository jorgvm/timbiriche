.root {
  display: flex;
  justify-content: center;
  overflow: hidden;
}

.board {
  display: grid;
  position: relative;
  flex: 1;

  // Isometric view
  transform: rotateX(60deg) rotateY(0deg) rotateZ(-45deg) scale(0.67)
    translate(20%, -20%);
  max-width: 500px;
}

.room {
  position: relative;
  transition: all 0.6s;
  margin: 1px;
  background: currentColor;
  aspect-ratio: 1;
  // default room color
  color: #f4f4f4;

  // Dark edge for 3d effect, bottom left
  &::before,
  &::after {
    display: block;
    position: absolute;
    top: 0px;
    left: -10%;
    clip-path: polygon(0% 9%, 100% 0, 100% 91%, 0% 100%);
    filter: brightness(65%);
    background: currentColor;
    aspect-ratio: 1;
    width: 10%;
    height: 110%;
    content: "";
  }

  // Dark edge for 3d effect, bottom right
  &::after {
    display: block;
    position: absolute;
    top: 100%;
    left: -10%;
    clip-path: polygon(9% 0%, 100% 0, 91% 100%, 0% 100%);
    filter: brightness(75%);
    background: currentColor;
    aspect-ratio: 1;
    width: 110%;
    height: 10%;
    content: "";
  }
}

.roomOwned .wall {
  cursor: default;
}

// Lower owned rooms
.roomOwned {
  transform: translate(-7%, 7%);
}

// Lift room when hovering
// Disable for now

// .room:not(.roomOwned):hover {
// z-index: 1;
// transform: translate(7%, -7%);
// filter: brightness(1.2);
// }

.wall {
  --wall-width: 10%;
  position: absolute;
  top: 0;
  left: 0;
  transition: all 0.4s;

  // The wall element is a hit area (button)
  cursor: pointer;
  padding: 0;
  width: 100%;
  height: 100%;
  color: inherit;

  &:focus {
    // Hide the hit area for mobile devices
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  }

  // The dark border to indicate a wall is actually set in the before element
  &::before {
    display: block;
    position: absolute;
    top: 0;
    right: 0%;
    opacity: 0;
    filter: brightness(0.5);
    transition: all 0.2s;
    background: currentColor;
    content: "";
  }
}

.wallTop {
  // The button of a wall is a triangular shape, to make the hit area bigger
  clip-path: polygon(0% 0%, 100% 0, 50% 50%);

  &::before {
    width: 100%;
    height: var(--wall-width);
  }
}

.wallRight {
  clip-path: polygon(50% 50%, 100% 0%, 100% 100%);

  &::before {
    width: var(--wall-width);
    height: 100%;
  }
}

.wallBottom {
  z-index: 1;
  clip-path: polygon(50% 50%, 100% 100%, 0% 100%);

  &::before {
    top: 90%;
    width: 100%;
    height: var(--wall-width);
  }
}

.wallLeft {
  clip-path: polygon(0% 0%, 50% 50%, 0% 100%);

  &::before {
    top: 0;
    left: 0px;
    width: var(--wall-width);
    height: 100%;
  }
}

// Show active wall
.room:not(.roomOwned) .wallActive:before {
  opacity: 1;
}

.shadow {
  display: block;
  position: absolute;
  bottom: -10%;
  left: -10%;
  z-index: -5;
  filter: blur(16px);
  background: rgba(0, 0, 0, 0.2);
  width: 100%;
  height: 100%;
}

// Status bar showing the active player
.status {
  display: flex;
  position: relative;
  position: fixed;
  bottom: 0;
  left: 0;
  justify-content: center;
  align-items: center;
  background: #27345c;
  padding: 10px;
  width: 100%;
  color: white;
  font-size: 2em;
  text-align: center;
}

// Rematch button
.rematch {
  position: absolute;
  top: -3em;
  left: 50%;
  transform: translateX(-50%);
}
